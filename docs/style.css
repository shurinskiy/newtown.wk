@charset "UTF-8";
/* Функции */
/* Утилиты */
/* Сбросы */
.hero__button, .header__close, .header__toggle {
  font-size: 16px;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  vertical-align: middle;
  display: inline-block;
  white-space: normal;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: none;
  -webkit-box-shadow: none;
  box-shadow: none;
  line-height: 1.1;
  max-width: none;
  outline: none;
  border: none;
  min-width: 0;
  padding: 0;
}

.hero__button, .header__close, .header__toggle {
  text-decoration: none;
  cursor: pointer;
  color: inherit;
}

body, div, dl, dt, dd, ul, li, h1, h2, h3, h4, h5, h6, pre, code, form, fieldset, input, textarea, p, blockquote, th, td {
  margin: 0;
  padding: 0;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

fieldset, img, abbr {
  border: 0;
}

address, caption, cite, code, dfn, em, strong, th, var {
  font-style: normal;
  font-weight: normal;
}

ul li {
  list-style: none;
}

caption, th {
  text-align: left;
}

h1, h2, h3, h4, h5, h6 {
  font-size: 100%;
  font-weight: normal;
}

sup {
  vertical-align: text-top;
}

sub {
  vertical-align: text-bottom;
}

input, textarea, select {
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
}

legend {
  color: #000;
}

article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section, main {
  display: block;
}

img {
  max-width: 100%;
  height: auto;
}

#__bs_notify__ {
  background-color: rgba(27, 32, 50, 0.4) !important;
  color: rgba(250, 250, 250, 0.6) !important;
}

@font-face {
  font-family: "RB";
  src: url("fonts/RoundsBlack.woff") format("woff"), url("fonts/RoundsBlack.woff2") format("woff2"), url("fonts/RoundsBlack.ttf") format("truetype");
  font-weight: 900;
  font-style: "normal";
}
@font-face {
  font-family: "GP";
  src: url("fonts/GothamPro_black.woff") format("woff"), url("fonts/GothamPro_black.woff2") format("woff2"), url("fonts/GothamPro_black.ttf") format("truetype");
  font-weight: 900;
  font-style: "normal";
}
@font-face {
  font-family: "GP";
  src: url("fonts/GothamPro_bold.woff") format("woff"), url("fonts/GothamPro_bold.woff2") format("woff2"), url("fonts/GothamPro_bold.ttf") format("truetype");
  font-weight: 700;
  font-style: "normal";
}
@font-face {
  font-family: "GP";
  src: url("fonts/GothamPro_medium.woff") format("woff"), url("fonts/GothamPro_medium.woff2") format("woff2"), url("fonts/GothamPro_medium.ttf") format("truetype");
  font-weight: 500;
  font-style: "normal";
}
@font-face {
  font-family: "GP";
  src: url("fonts/GothamPro.woff") format("woff"), url("fonts/GothamPro.woff2") format("woff2"), url("fonts/GothamPro.ttf") format("truetype");
  font-weight: 400;
  font-style: "normal";
}
/**
 * Swiper 11.1.14
 * Most modern mobile touch slider and framework with hardware accelerated transitions
 * https://swiperjs.com
 *
 * Copyright 2014-2024 Vladimir Kharlampidi
 *
 * Released under the MIT License
 *
 * Released on: September 12, 2024
 */
@font-face {
  font-family: "swiper-icons";
  src: url("data:application/font-woff;charset=utf-8;base64, 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") format("woff");
  font-weight: 400;
  font-style: normal;
}
:root {
  --swiper-theme-color: #007aff;
  /*
  --swiper-preloader-color: var(--swiper-theme-color);
  --swiper-wrapper-transition-timing-function: initial;
  */
}

:host {
  position: relative;
  display: block;
  margin-left: auto;
  margin-right: auto;
  z-index: 1;
}

.swiper {
  margin-left: auto;
  margin-right: auto;
  position: relative;
  overflow: hidden;
  list-style: none;
  padding: 0;
  /* Fix of Webkit flickering */
  z-index: 1;
  display: block;
}

.swiper-vertical > .swiper-wrapper {
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}

.swiper-wrapper {
  position: relative;
  width: 100%;
  height: 100%;
  z-index: 1;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-transition-property: -webkit-transform;
  transition-property: -webkit-transform;
  transition-property: transform;
  transition-property: transform, -webkit-transform;
  -webkit-transition-timing-function: var(--swiper-wrapper-transition-timing-function, initial);
  transition-timing-function: var(--swiper-wrapper-transition-timing-function, initial);
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
}

.swiper-android .swiper-slide,
.swiper-ios .swiper-slide,
.swiper-wrapper {
  -webkit-transform: translate3d(0px, 0, 0);
  transform: translate3d(0px, 0, 0);
}

.swiper-horizontal {
  -ms-touch-action: pan-y;
  touch-action: pan-y;
}

.swiper-vertical {
  -ms-touch-action: pan-x;
  touch-action: pan-x;
}

.swiper-slide {
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: 100%;
  height: 100%;
  position: relative;
  -webkit-transition-property: -webkit-transform;
  transition-property: -webkit-transform;
  transition-property: transform;
  transition-property: transform, -webkit-transform;
  display: block;
}

.swiper-slide-invisible-blank {
  visibility: hidden;
}

/* Auto Height */
.swiper-autoheight,
.swiper-autoheight .swiper-slide {
  height: auto;
}

.swiper-autoheight .swiper-wrapper {
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: flex-start;
  -webkit-transition-property: height, -webkit-transform;
  transition-property: height, -webkit-transform;
  transition-property: transform, height;
  transition-property: transform, height, -webkit-transform;
}

.swiper-backface-hidden .swiper-slide {
  -webkit-transform: translateZ(0);
  transform: translateZ(0);
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
}

/* 3D Effects */
.swiper-3d.swiper-css-mode .swiper-wrapper {
  -webkit-perspective: 1200px;
  perspective: 1200px;
}

.swiper-3d .swiper-wrapper {
  -webkit-transform-style: preserve-3d;
  transform-style: preserve-3d;
}

.swiper-3d {
  -webkit-perspective: 1200px;
  perspective: 1200px;
}
.swiper-3d .swiper-slide,
.swiper-3d .swiper-cube-shadow {
  -webkit-transform-style: preserve-3d;
  transform-style: preserve-3d;
}

/* CSS Mode */
.swiper-css-mode > .swiper-wrapper {
  overflow: auto;
  scrollbar-width: none; /* For Firefox */
  -ms-overflow-style: none; /* For Internet Explorer and Edge */
}
.swiper-css-mode > .swiper-wrapper::-webkit-scrollbar {
  display: none;
}
.swiper-css-mode > .swiper-wrapper > .swiper-slide {
  scroll-snap-align: start start;
}
.swiper-css-mode.swiper-horizontal > .swiper-wrapper {
  -ms-scroll-snap-type: x mandatory;
  scroll-snap-type: x mandatory;
}
.swiper-css-mode.swiper-vertical > .swiper-wrapper {
  -ms-scroll-snap-type: y mandatory;
  scroll-snap-type: y mandatory;
}
.swiper-css-mode.swiper-free-mode > .swiper-wrapper {
  -ms-scroll-snap-type: none;
  scroll-snap-type: none;
}
.swiper-css-mode.swiper-free-mode > .swiper-wrapper > .swiper-slide {
  scroll-snap-align: none;
}
.swiper-css-mode.swiper-centered > .swiper-wrapper::before {
  content: "";
  -ms-flex-negative: 0;
  flex-shrink: 0;
  -webkit-box-ordinal-group: 10000;
  -ms-flex-order: 9999;
  order: 9999;
}
.swiper-css-mode.swiper-centered > .swiper-wrapper > .swiper-slide {
  scroll-snap-align: center center;
  scroll-snap-stop: always;
}
.swiper-css-mode.swiper-centered.swiper-horizontal > .swiper-wrapper > .swiper-slide:first-child {
  -webkit-margin-start: var(--swiper-centered-offset-before);
  margin-inline-start: var(--swiper-centered-offset-before);
}
.swiper-css-mode.swiper-centered.swiper-horizontal > .swiper-wrapper::before {
  height: 100%;
  min-height: 1px;
  width: var(--swiper-centered-offset-after);
}
.swiper-css-mode.swiper-centered.swiper-vertical > .swiper-wrapper > .swiper-slide:first-child {
  -webkit-margin-before: var(--swiper-centered-offset-before);
  margin-block-start: var(--swiper-centered-offset-before);
}
.swiper-css-mode.swiper-centered.swiper-vertical > .swiper-wrapper::before {
  width: 100%;
  min-width: 1px;
  height: var(--swiper-centered-offset-after);
}

/* Slide styles start */
/* 3D Shadows */
.swiper-3d .swiper-slide-shadow,
.swiper-3d .swiper-slide-shadow-left,
.swiper-3d .swiper-slide-shadow-right,
.swiper-3d .swiper-slide-shadow-top,
.swiper-3d .swiper-slide-shadow-bottom,
.swiper-3d .swiper-slide-shadow,
.swiper-3d .swiper-slide-shadow-left,
.swiper-3d .swiper-slide-shadow-right,
.swiper-3d .swiper-slide-shadow-top,
.swiper-3d .swiper-slide-shadow-bottom {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 10;
}
.swiper-3d .swiper-slide-shadow {
  background: rgba(0, 0, 0, 0.15);
}
.swiper-3d .swiper-slide-shadow-left {
  background-image: -webkit-gradient(linear, right top, left top, from(rgba(0, 0, 0, 0.5)), to(rgba(0, 0, 0, 0)));
  background-image: linear-gradient(to left, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
}
.swiper-3d .swiper-slide-shadow-right {
  background-image: -webkit-gradient(linear, left top, right top, from(rgba(0, 0, 0, 0.5)), to(rgba(0, 0, 0, 0)));
  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
}
.swiper-3d .swiper-slide-shadow-top {
  background-image: -webkit-gradient(linear, left bottom, left top, from(rgba(0, 0, 0, 0.5)), to(rgba(0, 0, 0, 0)));
  background-image: linear-gradient(to top, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
}
.swiper-3d .swiper-slide-shadow-bottom {
  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.5)), to(rgba(0, 0, 0, 0)));
  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
}

.swiper-lazy-preloader {
  width: 42px;
  height: 42px;
  position: absolute;
  left: 50%;
  top: 50%;
  margin-left: -21px;
  margin-top: -21px;
  z-index: 10;
  -webkit-transform-origin: 50%;
  -ms-transform-origin: 50%;
  transform-origin: 50%;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  border: 4px solid var(--swiper-preloader-color, var(--swiper-theme-color));
  border-radius: 50%;
  border-top-color: transparent;
}

.swiper:not(.swiper-watch-progress) .swiper-lazy-preloader,
.swiper-watch-progress .swiper-slide-visible .swiper-lazy-preloader {
  -webkit-animation: swiper-preloader-spin 1s infinite linear;
  animation: swiper-preloader-spin 1s infinite linear;
}

.swiper-lazy-preloader-white {
  --swiper-preloader-color: #fff;
}

.swiper-lazy-preloader-black {
  --swiper-preloader-color: #000;
}

@-webkit-keyframes swiper-preloader-spin {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}

@keyframes swiper-preloader-spin {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}
/* Slide styles end */
.about {
  padding-top: 60px;
}
.about::after {
  display: block;
  content: "";
  height: 20px;
  background: url("images/arch-3.svg") center/100px 18px repeat-x transparent;
  max-width: var(--container);
  width: calc(100% - var(--gap) * 2);
  margin: 0 auto;
}
.about__title {
  margin-bottom: 40px;
}
.about__text {
  font-size: 30px;
  text-align: center;
  max-width: 890px;
  margin: 0 auto 95px;
}
.about__cards {
  max-width: 1560px;
  margin: 0 auto 40px;
  width: calc(100% - var(--gap) * 2);
  display: -ms-grid;
  display: grid;
  grid-gap: 40px 240px;
  -ms-grid-columns: (1fr)[2];
  grid-template-columns: repeat(2, 1fr);
}
.about__card {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  position: relative;
  -ms-grid-column-span: 1;
  grid-column: span 1;
  background-color: rgba(var(--accent), 0.2);
  border-radius: 10px;
  min-height: 290px;
  padding: 10px;
  color: rgb(var(--accent));
  text-transform: uppercase;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}
.about__card:nth-child(even) {
  text-align: right;
}
.about__card:nth-child(even) .about__card-icon {
  left: 0;
  -webkit-transform: translateX(-35%);
  -ms-transform: translateX(-35%);
  transform: translateX(-35%);
}
.about__card:nth-child(odd) {
  text-align: left;
}
.about__card:nth-child(odd) .about__card-icon {
  -webkit-transform: translateX(35%);
  -ms-transform: translateX(35%);
  transform: translateX(35%);
  right: 0;
}
.about__card-text {
  width: 100%;
  max-width: 310px;
  margin: 0 auto;
  font-size: 18px;
  font-weight: 500;
  line-height: 1.4;
}
.about__card-icon {
  position: absolute;
}

.container {
  margin-left: auto;
  margin-right: auto;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  max-width: var(--container);
  width: calc(100% - var(--gap) * 2);
}
.container_right, .container_left {
  width: calc(100% - var(--gap));
  max-width: calc(100% - (100% - var(--container)) / 2);
}
.container_right {
  margin-right: unset;
}
.container_left {
  margin-left: unset;
}
.container__half {
  -ms-flex-negative: 0;
  flex-shrink: 0;
  max-width: calc(50% - var(--gap) / 2);
  width: calc(var(--container) / 2);
}

.header {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  display: block;
  position: fixed;
  z-index: 12;
  left: 0;
  top: 20px;
  width: 100%;
  height: 85px;
  -webkit-transition: background-color 0.3s;
  transition: background-color 0.3s;
}
@media (max-width: 1280px) {
  .header {
    height: 77px;
  }
}
@media (max-width: 960px) {
  .header {
    height: 50px;
    background-color: #fff;
    top: 0;
  }
}
.header_visible {
  background-color: #fff;
  -webkit-box-shadow: 0 5px 4px rgba(0, 0, 0, 0.03);
  box-shadow: 0 5px 4px rgba(0, 0, 0, 0.03);
}
.header_visible .header__menu-side {
  opacity: 1;
  visibility: visible;
}
.header_visible .header__logo img {
  height: 0;
}
.header__inner {
  height: 100%;
}
@media (max-width: 960px) {
  .header__inner {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
  }
}
.header__toggle {
  display: none;
  width: 29px;
  height: 29px;
}
.header__toggle img, .header__toggle svg {
  display: block;
  width: 100%;
  height: 100%;
}
@media (max-width: 960px) {
  .header__toggle {
    display: block;
  }
}
.header__close {
  width: 35px;
  height: 35px;
  display: none;
}
.header__close img, .header__close svg {
  display: block;
  width: 100%;
  height: 100%;
}
@media (max-width: 960px) {
  .header__close {
    display: block;
    position: absolute;
    top: 10px;
    right: 10px;
    z-index: 1;
  }
}
.header__navi {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  height: 100%;
}
@media (max-width: 960px) {
  .header__navi {
    padding: 50px 15px;
    background-color: #fff;
    width: 100%;
    height: 100vh;
    height: 100dvh;
    position: fixed;
    z-index: 5;
    top: 0;
    left: -310px;
    max-width: 300px;
    -webkit-transition: left 0.3s linear;
    transition: left 0.3s linear;
    -webkit-box-shadow: 5px 0 5px rgba(0, 0, 0, 0.05);
    box-shadow: 5px 0 5px rgba(0, 0, 0, 0.05);
  }
  .header__navi.opened {
    left: 0;
  }
}
.header__menu {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  position: relative;
  height: 100%;
}
@media (max-width: 960px) {
  .header__menu {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-flow: column nowrap;
    flex-flow: column nowrap;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    -webkit-box-align: stretch;
    -ms-flex-align: stretch;
    align-items: stretch;
  }
}
.header__menu-side {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  visibility: hidden;
  opacity: 0;
  width: calc(50% - 120px);
}
@media (max-width: 1280px) {
  .header__menu-side {
    width: calc(50% - 75px);
  }
}
@media (max-width: 960px) {
  .header__menu-side {
    display: block;
    visibility: visible;
    opacity: 1;
    width: auto;
  }
}
.header__menu-link {
  display: block;
  text-decoration: none;
  text-align: center;
  font-size: 14px;
  padding: 0 10px;
  color: #000;
  -webkit-transition: background-color 0.3s;
  transition: background-color 0.3s;
}
.header__menu-link:hover {
  background-color: rgb(var(--accident));
  color: #fff;
}
@media (max-width: 960px) {
  .header__menu-link {
    text-align: left;
    text-transform: uppercase;
    padding: 5px 15px;
    margin-bottom: 10px;
  }
}
.header__logo {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  width: 200px;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-flow: column nowrap;
  flex-flow: column nowrap;
  background-color: rgb(var(--accident));
  border-radius: 0 0 10px 10px;
  padding: 20px 10px 40px;
  color: rgb(var(--accent));
  font-family: "RB", sans-serif;
  text-decoration: none;
  font-size: 30px;
  line-height: 0.8;
  position: absolute;
  z-index: 1;
  top: -20px;
  left: calc(50% - 100px);
}
@media (max-width: 1280px) {
  .header__logo {
    border-radius: 0 0 7px 7px;
    left: calc(50% - 70px);
    font-size: 24px;
    width: 140px;
  }
}
@media (max-width: 960px) {
  .header__logo {
    display: none;
  }
}
.header__logo img {
  display: block;
  margin: 0 auto 15px;
  height: 118px;
  -webkit-transition: height 0.3s;
  transition: height 0.3s;
}
@media (max-width: 1280px) {
  .header__logo img {
    height: 95px;
  }
}
.header__logo span {
  display: block;
  text-align: center;
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
  margin: 0 auto;
}
.header__logo span:nth-of-type(1) {
  margin-bottom: 3px;
}
.header__logo span:nth-of-type(2) {
  letter-spacing: 0.08em;
  background-color: #fff;
}
.header__logo-mobile {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  display: none;
  background-color: rgb(var(--accident));
  margin-right: auto;
  padding: 2px;
  width: 38px;
  height: 38px;
}
.header__logo-mobile img {
  display: block;
  width: 100%;
  height: 100%;
}
@media (max-width: 960px) {
  .header__logo-mobile {
    display: block;
  }
}

.hero {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  height: 100vh;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  z-index: 1;
}
@media (max-width: 480px) {
  .hero {
    height: calc(var(--vh, 1vh) * 100);
  }
}
.hero__slider {
  max-width: 100%;
}
.hero__slide {
  height: auto;
}
.hero__slide img {
  display: block;
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
  object-fit: cover;
}
.hero__button {
  position: absolute;
  border-radius: 100px;
  height: 54px;
  width: 54px;
  z-index: 1;
  top: calc(50% - 27px);
  background-color: rgba(var(--accent), 0.8);
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-transition: background-color 0.3s;
  transition: background-color 0.3s;
}
@media (max-width: 960px) {
  .hero__button {
    display: none;
  }
}
.hero__button:hover {
  background-color: rgba(var(--accident), 0.8);
}
.hero__button:hover svg {
  fill: rgba(var(--accent));
}
.hero__button img, .hero__button svg {
  display: block;
  width: 13px;
  height: 23px;
  -webkit-transition: fill 0.3s;
  transition: fill 0.3s;
  fill: rgba(var(--accident));
}
.hero__button_prev {
  left: 70px;
}
@media (max-width: 1280px) {
  .hero__button_prev {
    left: 30px;
  }
}
.hero__button_next {
  right: 70px;
}
@media (max-width: 1280px) {
  .hero__button_next {
    right: 30px;
  }
}
.hero__pagination {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  position: absolute;
  z-index: 2;
  bottom: 50px;
  left: 50%;
  -webkit-transform: translateX(-50%);
  -ms-transform: translateX(-50%);
  transform: translateX(-50%);
  width: 100%;
  max-width: 1260px;
  padding-left: 30px;
  padding-right: 30px;
}
@media (max-width: 480px) {
  .hero__pagination {
    padding-right: 20px;
    padding-left: 20px;
    bottom: 30px;
  }
}
.hero__dot {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  display: block;
  width: 12px;
  height: 12px;
  border-radius: 100px;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  -webkit-transition: background-color 0.3s;
  transition: background-color 0.3s;
  background-color: rgba(var(--accent));
  cursor: pointer;
}
@media (max-width: 640px) {
  .hero__dot {
    width: 9px;
    height: 9px;
  }
}
.hero__dot:not(:last-child) {
  margin-right: 35px;
}
@media (max-width: 640px) {
  .hero__dot:not(:last-child) {
    margin-right: 25px;
  }
}
.hero__dot.active {
  background-color: rgb(var(--accident));
}

.market {
  padding-top: 50px;
}
.news__button {
  position: absolute;
}
.objects {
  padding-top: 50px;
}
.objects::after {
  display: block;
  content: "";
  height: 20px;
  background: url("images/arch-2.svg") center/100px 18px repeat-x transparent;
  max-width: var(--container);
  width: calc(100% - var(--gap) * 2);
  margin: 0 auto;
}
.objects__title {
  margin-bottom: 30px;
}
.objects__image {
  margin-bottom: 40px;
}
.objects__text {
  font-size: 20px;
  max-width: 890px;
  margin: 0 auto 40px;
}
.objects__text ul {
  font-size: 16px;
}

.team__button {
  position: absolute;
}
.title {
  font-size: 45px;
  color: rgb(var(--accent));
  text-transform: uppercase;
  font-family: "RB", sans-serif;
}
@media (max-width: 1280px) {
  .title {
    font-size: calc(28px + 17 * (100vw - 480px) / 800);
  }
}
@media (max-width: 480px) {
  .title {
    font-size: 28px;
  }
}

.town {
  padding-top: 50px;
}
.town::after {
  display: block;
  content: "";
  height: 20px;
  background: url("images/arch-2.svg") center/100px 18px repeat-x transparent;
  max-width: var(--container);
  width: calc(100% - var(--gap) * 2);
  margin: 0 auto;
}
.town__title {
  margin-bottom: 30px;
}
.town__cards {
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: (1fr)[2];
  grid-template-columns: repeat(2, 1fr);
  grid-gap: 35px 90px;
  margin-bottom: 40px;
}
.town__card {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  border-radius: 10px;
  border: 4px solid rgb(var(--accident));
  padding: 20px 55px;
  min-height: 350px;
  color: inherit;
  text-decoration: none;
  background-color: #fff;
  -webkit-transition: background-color 0.3s;
  transition: background-color 0.3s;
}
.town__card:hover {
  background-color: rgb(var(--accident));
}
.town__card-image {
  width: 119px;
  height: 119px;
  border-radius: 200px;
  overflow: hidden;
  margin-bottom: 20px;
}
.town__bottom {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  background-color: rgb(var(--accent));
  margin: 0 auto 40px 0;
  width: calc(100% - var(--gap));
  max-width: calc(100% - (100% - 1280px) / 2);
}
.town__bottom-inner {
  margin-left: auto;
  max-width: 1280px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}
.town__bottom-text {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  padding: 35px 0 35px 100px;
  color: #fff;
  font-size: 20px;
  width: 100%;
  max-width: 700px;
  margin-right: auto;
}
.town__bottom-text span {
  font-size: 36px;
  font-family: "RB", sans-serif;
}
.town__bottom-image {
  width: 400px;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  position: relative;
  background-color: #fff;
}
.town__bottom-image::before {
  display: block;
  content: "";
  height: 100%;
  width: 20px;
  border-radius: 0 10px 10px 0;
  background-color: rgb(var(--accent));
  position: absolute;
  top: 0;
  left: 0;
}
.town__bottom-image img {
  position: absolute;
  bottom: 0;
  width: 100%;
}

:root {
  --size: 16px;
  --container: 1200px;
  --gap: 24px;
  --accent: 53, 84, 25;
  --accident: 190, 197, 49;
}
@media (max-width: 640px) {
  :root {
    --gap: 16px;
  }
}

body, html {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  background-color: #fff;
  font-size: var(--size);
  font-family: "GP", sans-serif;
  line-height: 1.2;
  font-weight: 400;
  min-height: 100vh;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-flow: column nowrap;
  flex-flow: column nowrap;
}

body.underlay::before {
  display: block;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  content: "";
  position: fixed;
  z-index: 12;
  top: 0px;
  left: 0px;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.7);
  -webkit-transition: opacity 0.4s;
  transition: opacity 0.4s;
  -webkit-animation: showItem 0.4s;
  animation: showItem 0.4s;
}
body.underlay_closing::before {
  opacity: 0;
}

.footer {
  -webkit-box-flex: 0;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  margin-top: auto;
}

.sprite {
  display: none;
}

p {
  margin-bottom: 10px;
}

strong {
  font-weight: bold;
}

em {
  font-style: italic;
}

@-webkit-keyframes showItem {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes showItem {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
.mb1 {
  margin-bottom: 100px;
}

.mb2 {
  margin-bottom: 60px;
}

.mb3 {
  margin-bottom: 40px;
}

@media (max-width: 780px) {
  .mb1 {
    margin-bottom: 60px;
  }
  .mb2 {
    margin-bottom: 40px;
  }
  .mb3 {
    margin-bottom: 30px;
  }
}
@media (max-width: 480px) {
  .mb1 {
    margin-bottom: 40px;
  }
  .mb2 {
    margin-bottom: 30px;
  }
  .mb3 {
    margin-bottom: 20px;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
